#include <stdio.h>  

void swap(int *a, int *b) {  
  int temp = *a;
  *a = *b;
  *b = temp;
}

int partition(int arr[], int low, int high) {
  int pivot = arr[high];
  
  int i = (low - 1);
  for (int j = low; j < high; j++) {
    if (arr[j] <= pivot) {
      i++;
      swap(&arr[i], &arr[j]);
    }
  }

  swap(&arr[i + 1], &arr[high]);
  return (i + 1);
}

void quickSort(int arr[], int low, int high) {
  if (low < high) {
    int pi = partition(arr, low, high);
    quickSort(arr, low, pi - 1);
    quickSort(arr, pi + 1, high);
  }
}

int main() {
  
  int n, i;
  printf("Enter size of array: ");
  scanf("%d", &n);
  
  int arr[n];  
  printf("Enter elements: ");
  for(i=0; i<n; i++) {
    scanf("%d", &arr[i]); 
  }

  int m, nth; 
  printf("Enter M and N: ");
  scanf("%d%d", &m, &nth); 
  
  quickSort(arr, 0, n-1);  

  printf("Sorted Array: ");
  for(i=0; i<n; i++)  
    printf("%d ", arr[i]);
  
  printf("\n");
    
  int mth_max = arr[n-m];
  int nth_min = arr[nth-1];  

  printf("M-th Max = %d\nNth Min = %d\n", mth_max, nth_min);

  int sum = mth_max + nth_min;
  printf("Sum is %d\n", sum);

  int diff = mth_max - nth_min;
  printf("Difference is %d", diff);
  
  return 0;
}
